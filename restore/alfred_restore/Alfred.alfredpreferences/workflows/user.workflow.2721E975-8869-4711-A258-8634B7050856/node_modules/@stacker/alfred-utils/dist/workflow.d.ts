import { ScriptFilter, ScriptFilterItem, WorkflowItem } from './interface';
export declare class Workflow {
    private items;
    private sortedItems;
    constructor(items?: WorkflowItem[], cacheable?: boolean);
    /**
     * 缓存数据显示
     */
    runWithCacheData(config: Omit<ScriptFilter, "items"> | undefined, cacheKey: string): Promise<void>;
    /**
     *
     * @param maxAge
     */
    writeCacheData(maxAge: number, cacheKey: string): void;
    /**
     * 根据score进行再排序,大的向前排
     * 转换为ScriptFilterItem
     * @param sf
     */
    private convertWorkflowItems;
    /**
     * 构建搜索项
     * @param item
     */
    addWorkflowItem(item: WorkflowItem): this;
    /**
     * 过滤结果集
     */
    filterWorkflowItemsBy(query: string | undefined, params: (keyof Pick<ScriptFilterItem, 'title' | 'subtitle' | 'uid' | 'arg'>)[], noResultsItem?: WorkflowItem): this;
    /**
     * 输出
     */
    run(config?: Omit<ScriptFilter, 'items'>): void;
}
