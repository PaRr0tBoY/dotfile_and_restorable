<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>de.leenno.terminalfinder</string>
	<key>connections</key>
	<dict>
		<key>11AC2062-621C-4764-A718-7163CFC527A8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B1019A11-09E9-4685-BF12-12D6E2ECD9A9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2B77D4CA-C635-410A-B0FB-7819E0CCD85E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>87A47DF6-4278-4C8D-85F0-D6EF244D5991</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>52A20DC2-D647-4F01-8D79-A0497DAA5FDA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>325CF477-5077-4460-A9F1-1B2D5143052F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>76584C39-BB00-4E7D-9BE0-4ACCBB2829F6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7113EA2C-468F-40D5-B2AA-C7E5E3D020A4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>964C67AF-870F-420E-8B91-6079B9457583</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>17BF1163-1E8E-426C-8572-225093B55B4E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9F9DC1C6-5DE4-49F7-9BAA-14E4CA01C956</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C5615B51-DAE5-4A23-8376-67AA21C3ECC3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>AA3CDA14-C3B5-442B-B117-D61A244C6625</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3FAD134F-0E3B-453B-A693-83B54A719141</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CAF291F5-4BFB-4659-8CD5-4ED346828B77</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>502D7BFE-AC1E-4D5B-AD2E-BBB7E15F67DB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>EFC3EA8E-3058-4011-B146-E820A2D2781F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DCAF940C-48A0-4523-9C5C-AEA1ED50891B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>LeEnno</string>
	<key>description</key>
	<string>Open currently selected Finder (or Path Finder) window in Terminal (or iTerm2) and vice versa</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>TerminalFinder</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>ft</string>
				<key>subtext</key>
				<string>Open current Finder directory in Terminal</string>
				<key>text</key>
				<string>Finder → Terminal</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>76584C39-BB00-4E7D-9BE0-4ACCBB2829F6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "Finder"
    set pathList to (quoted form of POSIX path of (folder of the front window as alias))
  end tell
  
  tell application "System Events"
    if not (exists (processes where name is "Terminal")) then
      do shell script "open -a Terminal " &amp; pathList
    else
      tell application "Terminal"
        activate
        if (count of windows) is 0 then
          do script ("cd " &amp; pathList)
        else
          tell application "System Events" to tell process "Terminal.app" to keystroke "t" using command down
          delay 1
          do script ("cd " &amp; pathList) in first window
        end if
      end tell
    end if
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>7113EA2C-468F-40D5-B2AA-C7E5E3D020A4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>tf</string>
				<key>subtext</key>
				<string>Open current Terminal directory in Finder</string>
				<key>text</key>
				<string>Terminal → Finder</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>964C67AF-870F-420E-8B91-6079B9457583</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "Terminal"
    do script "open -a Finder ./" in first window
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>17BF1163-1E8E-426C-8572-225093B55B4E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>fit</string>
				<key>subtext</key>
				<string>Open current Finder directory in iTerm</string>
				<key>text</key>
				<string>Finder → iTerm</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>AA3CDA14-C3B5-442B-B117-D61A244C6625</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>tell application "Finder"
	set pathList to (quoted form of POSIX path of (folder of the front window as alias))
end tell

do shell script "open -a iTerm.app " &amp; pathList</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3FAD134F-0E3B-453B-A693-83B54A719141</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "iTerm"
    tell the current session of current window
      write text "open -a Finder ./"
    end tell
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>C5615B51-DAE5-4A23-8376-67AA21C3ECC3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>if</string>
				<key>subtext</key>
				<string>Open current iTerm directory in Finder</string>
				<key>text</key>
				<string>iTerm → Finder</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>9F9DC1C6-5DE4-49F7-9BAA-14E4CA01C956</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "Path Finder"
    set pathList to POSIX path of the target of the front finder window
  end tell

  tell application "System Events"
    if not (exists (processes where name is "Terminal")) then
      do shell script "open -a Terminal " &amp; quoted form of pathList
    else
      tell application "Terminal"
        activate
        delay 0.25
        tell application "System Events" to tell process "Terminal" to keystroke "t" using command down
        do script ("cd " &amp; quoted form of pathList &amp; "; clear") in first window
      end tell
    end if
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>502D7BFE-AC1E-4D5B-AD2E-BBB7E15F67DB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>pt</string>
				<key>subtext</key>
				<string>Open current Path Finder directory in Terminal</string>
				<key>text</key>
				<string>PathFinder → Terminal</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>CAF291F5-4BFB-4659-8CD5-4ED346828B77</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>tp</string>
				<key>subtext</key>
				<string>Open current Terminal directory in Finder</string>
				<key>text</key>
				<string>Terminal → Path Finder</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>2B77D4CA-C635-410A-B0FB-7819E0CCD85E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "Terminal"
    do script "open -a 'Path Finder' ./" in first window
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>87A47DF6-4278-4C8D-85F0-D6EF244D5991</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>pi</string>
				<key>subtext</key>
				<string>Open current Path Finder directory in iTerm</string>
				<key>text</key>
				<string>Path Finder → iTerm</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>52A20DC2-D647-4F01-8D79-A0497DAA5FDA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "Path Finder"
    set pathList to POSIX path of the target of the front finder window
    set pathList to quoted form of pathList
    set command to "clear; cd " &amp; pathList
  end tell
  
  tell application "System Events"
    -- some versions might identify as "iTerm2" instead of "iTerm"
    set isRunning to (exists (processes where name is "iTerm")) or (exists (processes where name is "iTerm2"))
  end tell
  
  tell application "iTerm"
    activate
    set hasNoWindows to ((count of windows) is 0)
    if isRunning and hasNoWindows then
      create window with default profile
    end if
    select first window
    
    tell the first window
      if isRunning and hasNoWindows is false then
        create tab with default profile
      end if
      tell current session to write text command
    end tell
  end tell

end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>325CF477-5077-4460-A9F1-1B2D5143052F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>on alfred_script(q)
  tell application "iTerm"
    tell the current session of current window
      write text "open -a 'Path Finder' ./"
    end tell
  end tell
end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>DCAF940C-48A0-4523-9C5C-AEA1ED50891B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>ip</string>
				<key>subtext</key>
				<string>Open current iTerm directory in Path Finder</string>
				<key>text</key>
				<string>iTerm → Path Finder</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>EFC3EA8E-3058-4011-B146-E820A2D2781F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Properties
 property open_in_new_window : false -- Open in a new window if true
 property open_in_new_tab : true -- Open in a new tab if true
 property our_delay : 0.5 -- Delay between keystrokes, increase if needed

 -- Keystrokes
 property new_window_keystroke : "n" -- Keystroke for opening a new window
 property new_tab_keystroke : "t" -- Keystroke for opening a new tab
 property return_key_code : 36 -- Key code for the return key

 -- Handlers
 -- Open a new Warp window
 on open_new_window()
     perform_keystroke(new_window_keystroke, command down)
 end open_new_window

 -- Open a new Warp tab
 on open_new_tab()
     perform_keystroke(new_tab_keystroke, command down)
 end open_new_tab

 -- Activate the Warp application
 on activate_warp()
     tell application "Warp" to activate
 end activate_warp

 -- Send a command to the Warp terminal
 on send_command(command_text)
     tell application "System Events"
         tell process "Warp"
             keystroke command_text
             delay(our_delay)
             key code return_key_code
         end tell
     end tell
 end send_command

 -- Perform a keystroke with optional modifiers
 on perform_keystroke(key_label, key_modifiers)
     tell application "System Events"
         tell process "Warp"
             keystroke key_label using key_modifiers
         end tell
     end tell
 end perform_keystroke

 -- Main
 -- This handler is called by Alfred with the query (not used in this script)
 on alfred_script(query)
     -- Get the current folder path from Finder
     tell application "Finder"
         set currentFolder to (folder of the front window as alias)
     end tell
     set currentPath to POSIX path of currentFolder

     -- Activate Warp
     activate_warp()

     -- Choose whether to open a new window, new tab, or reuse the current tab
     if open_in_new_window then
         open_new_window()
     else if open_in_new_tab then
         open_new_tab()
     end if

     -- Send the change directory command to Warp
     send_command("cd " &amp; quoted form of currentPath)
 end alfred_script</string>
				<key>cachescript</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>B1019A11-09E9-4685-BF12-12D6E2ECD9A9</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>fw</string>
				<key>subtext</key>
				<string>Open current Finder directory in Warp</string>
				<key>text</key>
				<string>Finder → Warp</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>11AC2062-621C-4764-A718-7163CFC527A8</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># alfred-terminalfinder

Alfred workflow to open current Finder window in Terminal/iTerm and vice versa.

## Usage

Install workflow and enter following keywords depending on what you want to achieve:

- `ft`: open current **Finder** directory in **Terminal**
- `tf`: open current **Terminal** directory in **Finder**
- `fi`: open current **Finder** directory in **iTerm**
- `if`: open current **iTerm** directory in **Finder**

Thanks to @olibob we also have [Path Finder](http://www.cocoatech.com/ "Path Finder 6 by Cocoatech") support:

- `pt`: open current **Path Finder** directory in **Terminal**
- `tp`: open current **Terminal** directory in **Path Finder**
- `pi`: open current **Path Finder** directory in **iTerm**
- `ip`: open current **iTerm** directory in **Path Finder**

In addition the search result in Alfred will show you what the action will do in its subtitle, i.e. `ft`:

![Finder → Terminal](https://raw.github.com/LeEnno/alfred-terminalfinder/master/screenshot_ft.png)

## iTerm Compatibility

This workflow works with iTerm 3.x and 2.9.x. If you need support for 2.1.x, [see the `2.1.x` branch](https://github.com/LeEnno/alfred-terminalfinder/tree/2.1.x "LeEnno/alfred-terminalfinder at 2.1.x").

## Hat tip

This workflow was heavily inspired by [ssgreg's *Terminal in Finder's folder*](https://github.com/ssgreg/AlfredWorkflows/ "ssgreg/AlfredWorkflows · GitHub").</string>
	<key>uidata</key>
	<dict>
		<key>11AC2062-621C-4764-A718-7163CFC527A8</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>975</real>
		</dict>
		<key>17BF1163-1E8E-426C-8572-225093B55B4E</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>2B77D4CA-C635-410A-B0FB-7819E0CCD85E</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>325CF477-5077-4460-A9F1-1B2D5143052F</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>3FAD134F-0E3B-453B-A693-83B54A719141</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>250</real>
		</dict>
		<key>502D7BFE-AC1E-4D5B-AD2E-BBB7E15F67DB</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>490</real>
		</dict>
		<key>52A20DC2-D647-4F01-8D79-A0497DAA5FDA</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>7113EA2C-468F-40D5-B2AA-C7E5E3D020A4</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>15</real>
		</dict>
		<key>76584C39-BB00-4E7D-9BE0-4ACCBB2829F6</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>15</real>
		</dict>
		<key>87A47DF6-4278-4C8D-85F0-D6EF244D5991</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>964C67AF-870F-420E-8B91-6079B9457583</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>9F9DC1C6-5DE4-49F7-9BAA-14E4CA01C956</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>AA3CDA14-C3B5-442B-B117-D61A244C6625</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>250</real>
		</dict>
		<key>B1019A11-09E9-4685-BF12-12D6E2ECD9A9</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>975</real>
		</dict>
		<key>C5615B51-DAE5-4A23-8376-67AA21C3ECC3</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>CAF291F5-4BFB-4659-8CD5-4ED346828B77</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>490</real>
		</dict>
		<key>DCAF940C-48A0-4523-9C5C-AEA1ED50891B</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>850</real>
		</dict>
		<key>EFC3EA8E-3058-4011-B146-E820A2D2781F</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>850</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.1.0</string>
	<key>webaddress</key>
	<string>https://github.com/LeEnno/alfred-terminalfinder</string>
</dict>
</plist>
